name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:13
        env:
          POSTGRES_USER: dbuser
          POSTGRES_PASSWORD: dbpass
          POSTGRES_DB: development
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.22.2

    - name: Restore Go dependencies cache
      uses: actions/cache@v4
      with:
        path: /home/runner/.cache/go-build
        key: go-modules-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          go-modules-

    - name: Copy .env.example to .env
      run: cp .env.example .env

    - name: Initialize Go module
      run: |
        cd $GITHUB_WORKSPACE
        go mod tidy

    - name: Ensure Go code is formatted
      run: gofmt -s -w .

    - name: Build Docker image
      run: docker build -t moneyger-backend -f deployments/Dockerfile .

    - name: Run tests
      run: docker run --rm --network host -v ${{ github.workspace }}:/app -w /app moneyger-backend go test -v -coverprofile=coverage.out ./...

    - name: Save Go dependencies cache
      uses: actions/cache@v4
      with:
        path: /home/runner/.cache/go-build
        key: go-modules-${{ hashFiles('**/go.sum') }}

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: coverage.out
        flags: unittests
        name: codecov-report
