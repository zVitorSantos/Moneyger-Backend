definitions:
  handlers.User:
    properties:
      id:
        type: integer
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.Account:
    properties:
      accountID:
        type: integer
      accountName:
        type: string
      accountType:
        description: 'Example: bank, card, wallet...'
        type: string
      balance:
        type: number
      createdAt:
        type: string
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/models.User'
      userID:
        type: integer
    type: object
  models.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      passwordHash:
        type: string
      updatedAt:
        type: string
      userID:
        type: integer
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /accounts:
    get:
      description: Get all accounts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Account'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all accounts
      tags:
      - accounts
    post:
      consumes:
      - application/json
      description: Create a new account
      parameters:
      - description: Account
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/models.Account'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Account'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a new account
      tags:
      - accounts
  /accounts/{id}:
    delete:
      description: Delete an account by ID
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Account deleted
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete an account by ID
      tags:
      - accounts
    get:
      description: Get an account by ID
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Account'
        "404":
          description: Account not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get an account by ID
      tags:
      - accounts
    put:
      consumes:
      - application/json
      description: Update an account by ID
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: string
      - description: Account
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/models.Account'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Account'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Account not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update an account by ID
      tags:
      - accounts
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login a user with username and password
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.User'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login a user
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with username and password
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.User'
      produces:
      - application/json
      responses:
        "201":
          description: message
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - auth
swagger: "2.0"
